---
import Layout from "../layouts/Layout.astro";
import { ArrowRight } from "lucide-astro";

// This would typically come from a database or API
// const pastMessages = [
//   { greeting: "Hello there!", name: "Alice" },
//   { greeting: "Good morning!", name: "Bob" },
//   { greeting: "Have a nice day!", name: "Charlie" },
// ];

type Greeting = {
  message: string;
  author: string;
  createdAt: string;
  displayedUntil: string;
};

const apiDomain = process.env.PUBLIC_API_URL;
const apiUrl =
  apiDomain != null ? `https://${apiDomain}` : "http://localhost:4000";

const res = await fetch(`${apiUrl}/greetings`);
const messages: Greeting[] = await res.json();

const currentMessage = messages.find(
  (message) => message.displayedUntil > new Date().toISOString(),
);

const pastMessages = messages.filter(
  (message) => message.displayedUntil < new Date().toISOString(),
);
---

<Layout title="Greeting Website">
  <main
    class="p-4 min-h-screen flex flex-col items-center justify-center text-text bg-gradient-to-b from-base via-crust to-mantle"
  >
    <header class="mb-8 mt-12 text-center">
      <h1
        class="text-4xl text-flamingo font-bold mb-4"
        style={{
          textShadow:
            "0 0 10px rgba(203, 166, 247, 0.7), 0 0 20px rgba(203, 166, 247, 0.5)",
        }}
      >
        Tidbyt Message Board
      </h1>
      <p class="text-muted text-lg">
        Send me a message on my Tidbyt. <a
          href="/about"
          class="whitespace-nowrap hover:text-peach"
          ><span class="underline">Learn more</span>
          <ArrowRight class="inline-block" size={14} /></a
        >
      </p>
    </header>

    <form
      class="p-6 rounded-lg border border-surface-0 shadow-lg w-full max-w-lg bg-base/80 backdrop-blur-xl"
    >
      <div class="mb-4">
        <input
          type="text"
          id="message"
          name="message"
          maxlength="20"
          class="w-full bg-surface-0 p-2 border border-surface-1 rounded"
          placeholder="your message (max 20 chars)"
          required
        />
      </div>
      <div class="mb-4">
        <input
          type="text"
          id="name"
          name="name"
          maxlength="10"
          class="w-full bg-surface-0 p-2 border border-surface-1 rounded"
          placeholder="your name (max 10 chars)"
          required
        />
      </div>
      <button
        type="submit"
        class="bg-pink hover:bg-peach text-base px-4 py-2 rounded w-full hover:bg-rose transition-colors"
      >
        Send Greeting
      </button>
    </form>

    {
      currentMessage && (
        <div class="mt-12 w-full max-w-lg">
          <h2
            class="text-sapphire text-xl font-medium mb-4"
            style={{
              textShadow:
                "0 0 10px rgba(203, 166, 247, 0.7), 0 0 20px rgba(203, 166, 247, 0.5)",
            }}
          >
            Current message
          </h2>

          <div class="bg-surface-0/80 backdrop-blur-xl p-4 rounded-lg">
            <p class="text-text">{currentMessage.message}</p>
            <p class="text-foam text-sm mt-1">- {currentMessage.author}</p>
            <p class="text-subtle text-xs mt-2">
              Displayed until:{" "}
              {new Date(currentMessage.displayedUntil).toLocaleString()}
            </p>
          </div>
        </div>
      )
    }

    <div class="mt-12 w-full max-w-lg">
      <h2
        class="text-subtle text-xl font-medium mb-4"
        style={{
          textShadow:
            "0 0 10px rgba(203, 166, 247, 0.7), 0 0 20px rgba(203, 166, 247, 0.5)",
        }}
      >
        Past messages
      </h2>
      <ul class="space-y-4">
        {
          messages.map(({ message, author }) => (
            <li class="bg-surface-0/80 backdrop-blur-xl p-4 rounded-lg">
              <p class="text-text">{message}</p>
              <p class="text-foam text-sm mt-1">- {author}</p>
            </li>
          ))
        }
      </ul>
    </div>
  </main>
</Layout>
